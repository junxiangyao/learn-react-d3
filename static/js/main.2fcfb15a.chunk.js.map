{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","useEffect","csv","then","console","log","map","d","i","style","backgroundColor","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MA2CeA,EA1BH,WAAI,MAGUC,mBAAS,MAHnB,mBAGPC,EAHO,KAGDC,EAHC,KASd,OALDC,qBAAU,WAAKC,YAlBD,8IAkBaC,MAAK,SAAAJ,GACzBC,EAAQD,GACZK,QAAQC,IAAI,sBACV,IAEAN,GAIJK,QAAQC,IAAIN,EAAK,IACVA,EAAKO,KAAI,SAACC,EAAEC,GAAH,OACd,qBAEAC,MAAS,CACPC,gBAAiBH,EAAE,iBACnBI,MAAO,QACPC,OAAQ,QAJLJ,OANE,8CCfIK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2fcfb15a.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport {csv} from 'd3'\n// import { message } from './message';\nconst csvURL = 'https://gist.githubusercontent.com/curran/b236990081a24761f7000567094914e0/raw/acd2b8cecfe51c520622fbaf407ee88b8796bfc6/cssNamedColors.csv'\n\n// message(csvURL);\n\n// const App = ()=>{\n//   const [data, setData] = useState(null);\n// \tuseEffect(()=>{csv(csvURL).then(data=>{\n//         setData(data);\n//     console.log(\"fetching data\")\n//   })},[])\n//   // useEffect(()=>csv(csvURL).then(setData),[]); // useEffect, the csv() will only be called once.\n//   return(<pre>{data ? message(data) : \"loading\"}</pre>);\n// }\n\nconst App = ()=>{\n\n  // Loading with D3\n  const [data, setData] = useState(null);\n\tuseEffect(()=>{csv(csvURL).then(data=>{\n        setData(data);\n    console.log(\"fetching data\")\n  })},[])\n\n  if(!data){\n    return <pre>Loading...</pre>;\n  }\n  // useEffect(()=>csv(csvURL).then(setData),[]); // useEffect, the csv() will only be called once.\n  console.log(data[0]);\n  return data.map((d,i) =>\n    <div\n    key={i}\n    style = {{\n      backgroundColor: d['RGB hex value'],\n      width: '960px',\n      height: '6px'\n    }}\n  />);\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}